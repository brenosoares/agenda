import { buscarFilmes, detalhesFilme } from './api.js'; import { getFavoritos, toggleFavorito, isFavorito } from './favorites.js'; const qs = sel => document.querySelector(sel); function create(tag, attrs = {}, ...children) { const el = document.createElement(tag); Object.entries(attrs).forEach(([k,v]) => { if (k.startsWith('on') && typeof v === 'function') el.addEventListener(k.slice(2), v); else if (k === 'class') el.className = v; else el.setAttribute(k, v); }); children.filter(Boolean).forEach(c => el.append(typeof c === 'string' ? document.createTextNode(c) : c)); return el; } export async function renderLista(query) { const container = qs('#results'); container.innerHTML = ''; const loading = create('p', { id: 'loading' }, 'Carregando...'); container.append(loading); const data = await buscarFilmes(query); loading.remove(); if (!data.Search?.length) { container.append(create('p', {}, data.Error || 'Nenhum resultado')); return; } const grid = create('div', { class: 'grid' }); data.Search.forEach(item => { const card = create('article', { class: 'card' }, create('h3', { class: 'card__title' }, item.Title), create('p', { class: 'meta' }, item.Year), create('div', { class: 'actions' }, create('button', { class: 'btn btn--sm', onClick: () => abrirDetalhes(item.imdbID) }, 'Detalhes'), create('button', { class: 'btn btn--ghost btn--sm', onClick: (e) => { toggleFavorito(item.imdbID); e.currentTarget.textContent = isFavorito(item.imdbID) ? '★' : '☆'; } }, isFavorito(item.imdbID) ? '★' : '☆')) ); grid.append(card); }); container.append(grid); } async function abrirDetalhes(id) { const modal = qs('#modal'); modal.innerHTML = 'Carregando...'; modal.showModal(); const info = await detalhesFilme(id); modal.innerHTML = ''; modal.append(create('h2', {}, info.Title), create('p', {}, info.Plot || 'Sem sinopse.'), create('button', { onClick: () => modal.close() }, 'Fechar')); }