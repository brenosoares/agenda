import { sum, average, topBy, groupBy, conversionRate } from './metrics.js';
async function loadData() { const res = await fetch('./dados.json'); if (!res.ok) throw new Error('Falha ao carregar dados'); return res.json(); }
function el(tag, attrs = {}, ...children) { const node = document.createElement(tag); Object.entries(attrs).forEach(([k,v]) => { if (k.startsWith('on') && typeof v === 'function') node.addEventListener(k.slice(2), v); else if (k === 'class') node.className = v; else node.setAttribute(k,v); }); for (const c of children) { if (c == null) continue; node.appendChild(typeof c === 'string' ? document.createTextNode(c) : c); } return node; }
function formatPct(n) { return (n * 100).toFixed(1) + '%'; }
function renderSummary(container, data) { const totalAcessos = sum(data, 'acessos'); const totalConv = sum(data, 'conversoes'); const mediaConv = average(data.map(d => ({ pct: conversionRate(d) })), 'pct'); container.append(cardMetric('Acessos', totalAcessos), cardMetric('Conversões', totalConv), cardMetric('Taxa Média', formatPct(mediaConv))); }
function cardMetric(label, value) { return el('div', { class: 'metric-card' }, el('h3', {}, label), el('strong', {}, String(value))); }
function renderTop(container, data) { const topAcc = topBy(data, 'acessos'); const topConv = topBy(data, 'conversoes'); container.append(el('li', {}, `Mais acessos: ${topAcc.nome} (${topAcc.acessos})`), el('li', {}, `Mais conversões: ${topConv.nome} (${topConv.conversoes})`)); }
function renderGroups(container, data) { const groups = groupBy(data, 'categoria'); Object.entries(groups).forEach(([cat, items]) => { const list = el('ul'); items.forEach(i => { list.append(el('li', {}, `${i.nome}: ${i.acessos} acessos, ${i.conversoes} conv (${formatPct(conversionRate(i))})`)); }); container.append(el('section', { class: 'cat-block' }, el('h4', {}, cat), list)); }); }
async function init() { const root = document.getElementById('dashboard-root'); const loading = el('p', { id: 'loading' }, 'Carregando...'); root.append(loading); try { const data = await loadData(); loading.remove(); const summary = el('div', { class: 'summary' }); const topList = el('ul', { class: 'tops' }); const groups = el('div', { class: 'groups' }); root.append(summary, el('h2', {}, 'Top Itens'), topList, el('h2', {}, 'Por Categoria'), groups); renderSummary(summary, data); renderTop(topList, data); renderGroups(groups, data); } catch (err) { loading.textContent = 'Erro ao carregar dados.'; loading.setAttribute('role', 'alert'); } }
document.addEventListener('DOMContentLoaded', init);